[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "python_template"
version = "0.1.0"
description = "Template"
authors = ["DataForGood"]
license = " MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
humanize = "^4.9.0"
wordcloud = "^1.9.3"
taipy = "^3.1.1"
plotly = "^5.22.0"
numpy = "^1.26.4"

# SECURITY ISSUES
# CVE-2024-1681: flask-core <4.0.1 !!! 
# latest version of Taipy 3.1.1 needs <=4.0.0 !!!
# should be fixed in 4.0.1 
flask-cors = "^4.0.0" 
# CVE-2024-5629: pymongo <4.6.3 !!!
# latest version of Taipy 3.1.1 needs <=4.6.1 !!!
# should be fixed in 4.7.3 
pymongo = "^4.6.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.1"
pytest = "^7.2.0"
tox = "^4.4.8"
ruff = "^0.4.8"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 96
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "B"]
ignore = ["E501", "E712"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
# Disable fix for unused imports (`F401`).
unfixable = ["F401"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

#[tool.ruff.lint.mccabe]
#max-complexity = 10
